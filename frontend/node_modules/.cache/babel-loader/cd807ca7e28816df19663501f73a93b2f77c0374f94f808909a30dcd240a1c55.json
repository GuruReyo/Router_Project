{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VenkataGuravaiahNall\\\\OneDrive - Zeta Global\\\\Desktop\\\\Advanced_React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Events from './pages/Events';\nimport EventDetail from './pages/EventDetail';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 26\n      }, this)\n    }, {\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 28\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this),\n        loader: async () => {\n          const response = await fetch('http://localhost:8080/events');\n          if (!response.ok) {\n            // setError('Fetching events failed.');\n          } else {\n            const resData = await response.json();\n            // setFetchedEvents(resData.events);\n            return resData.eve;\n          }\n        }\n      }, {\n        path: ':eventId',\n        element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }, this)\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }, this)\n      }, {\n        path: ':eventId/edit',\n        element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Home","Events","EventDetail","NewEvent","EditEvent","RootLayout","EventsRootLayout","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","loader","response","fetch","ok","resData","json","eve","_c","$RefreshReg$"],"sources":["C:/Users/VenkataGuravaiahNall/OneDrive - Zeta Global/Desktop/Advanced_React/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {createBrowserRouter,RouterProvider} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Events from './pages/Events';\nimport EventDetail from './pages/EventDetail';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nfunction App() {\n\n  const router=createBrowserRouter([\n    {path:'/',element:<RootLayout />,\n    children:[\n    {index:true,element: <Home />},\n    {path:'events',element:<EventsRootLayout />,\n    children:[\n      {index:true,element: <Events />,loader:async ()=>{\n        const response = await fetch('http://localhost:8080/events');\n\n        if (!response.ok) {\n          // setError('Fetching events failed.');\n        } else {\n        const resData = await response.json();\n        // setFetchedEvents(resData.events);\n        return resData.eve;\n      }\n      }},\n      {path:':eventId',element:<EventDetail />},\n      {path:'new',element:<NewEvent />},\n      {path:':eventId/edit',element:<EditEvent />},\n    ]},\n    \n    ],  \n  },\n    \n  ]);\n  return (\n    <RouterProvider router={router} />\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,mBAAmB,EAACC,cAAc,QAAO,kBAAkB;AACnE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClD,SAASC,GAAGA,CAAA,EAAG;EAEb,MAAMC,MAAM,GAACZ,mBAAmB,CAAC,CAC/B;IAACa,IAAI,EAAC,GAAG;IAACC,OAAO,eAACJ,OAAA,CAACH,UAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAChCC,QAAQ,EAAC,CACT;MAACC,KAAK,EAAC,IAAI;MAACN,OAAO,eAAEJ,OAAA,CAACR,IAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EAC9B;MAACL,IAAI,EAAC,QAAQ;MAACC,OAAO,eAACJ,OAAA,CAACF,gBAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC3CC,QAAQ,EAAC,CACP;QAACC,KAAK,EAAC,IAAI;QAACN,OAAO,eAAEJ,OAAA,CAACP,MAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAACG,MAAM,EAAC,MAAAA,CAAA,KAAU;UAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;UAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;YAChB;UAAA,CACD,MAAM;YACP,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YACrC;YACA,OAAOD,OAAO,CAACE,GAAG;UACpB;QACA;MAAC,CAAC,EACF;QAACd,IAAI,EAAC,UAAU;QAACC,OAAO,eAACJ,OAAA,CAACN,WAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,CAAC,EACzC;QAACL,IAAI,EAAC,KAAK;QAACC,OAAO,eAACJ,OAAA,CAACL,QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,CAAC,EACjC;QAACL,IAAI,EAAC,eAAe;QAACC,OAAO,eAACJ,OAAA,CAACJ,SAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,CAAC;IAC7C,CAAC;EAGJ,CAAC,CAEA,CAAC;EACF,oBACER,OAAA,CAACT,cAAc;IAACW,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEtC;AAACU,EAAA,GA/BQjB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}