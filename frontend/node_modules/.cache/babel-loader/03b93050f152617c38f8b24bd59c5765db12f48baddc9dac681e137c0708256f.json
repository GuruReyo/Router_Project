{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VenkataGuravaiahNall\\\\OneDrive - Zeta Global\\\\Desktop\\\\Advanced_React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport { defer, json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  // if(data.isError){\n  //   return <p>{data.message}</p>\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //..\n    // return {isError : true,message:'Could not fetch the events...'};\n    // throw {message:\"an error occured\"}\n    // throw new Response(JSON.stringify({message:\"Could not fetch events.\",status:500}));\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData=await response.json();\n    // return resData.events;\n    return response.json();\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["defer","json","useLoaderData","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","Await","resolve","loadEvents","_c","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/VenkataGuravaiahNall/OneDrive - Zeta Global/Desktop/Advanced_React/12-adv-starting-project/frontend/src/pages/Events.jsx"],"sourcesContent":["import { defer, json, useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\nimport { Suspense } from 'react';\r\nfunction EventsPage() {\r\n  const data=useLoaderData();\r\n  // if(data.isError){\r\n  //   return <p>{data.message}</p>\r\n  // }\r\n  const events=data.events;\r\n  return (\r\n    <>\r\n      {/* <EventsList  events={events}/> */}\r\n    <Suspense ></Suspense>\r\n      <Await resolve={events}>{\r\n        (loadEvents)=> <EventsList events={loadEvents} />\r\n      }</Await>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\nasync function loadEvents(){\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if(!response.ok){\r\n    //..\r\n    // return {isError : true,message:'Could not fetch the events...'};\r\n    // throw {message:\"an error occured\"}\r\n    // throw new Response(JSON.stringify({message:\"Could not fetch events.\",status:500}));\r\n    throw json({message:'Could not fetch events.'},\r\n      {status:500\r\n\r\n      }\r\n    );\r\n  }else{\r\n    // const resData=await response.json();\r\n    // return resData.events;\r\n    return response.json();\r\n  }\r\n}\r\nexport function loader(){\r\n return  defer({\r\n    events:loadEvents()\r\n  })\r\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAACT,aAAa,CAAC,CAAC;EAC1B;EACA;EACA;EACA,MAAMU,MAAM,GAACD,IAAI,CAACC,MAAM;EACxB,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBAEAP,OAAA,CAACF,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACpBX,OAAA,CAACY,KAAK;MAACC,OAAO,EAAEP,MAAO;MAAAC,QAAA,EACpBO,UAAU,iBAAId,OAAA,CAACH,UAAU;QAACS,MAAM,EAAEQ;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA,eACT,CAAC;AAEP;AAACP,EAAA,CAfQD,UAAU;EAAA,QACNP,aAAa;AAAA;AAAAmB,EAAA,GADjBZ,UAAU;AAiBnB,eAAeA,UAAU;AACzB,eAAeW,UAAUA,CAAA,EAAE;EACzB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd;IACA;IACA;IACA;IACA,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAC;IAAyB,CAAC,EAC5C;MAACC,MAAM,EAAC;IAER,CACF,CAAC;EACH,CAAC,MAAI;IACH;IACA;IACA,OAAOJ,QAAQ,CAACrB,IAAI,CAAC,CAAC;EACxB;AACF;AACA,OAAO,SAAS0B,MAAMA,CAAA,EAAE;EACvB,OAAQ3B,KAAK,CAAC;IACXY,MAAM,EAACQ,UAAU,CAAC;EACpB,CAAC,CAAC;AACJ;AAAC,IAAAC,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}